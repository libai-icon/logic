'use strict';

exports.__esModule = true;

var _components;

var _isEmpty = require('lodash/isEmpty');

var _isEmpty2 = _interopRequireDefault(_isEmpty);

var _field = require('../../field');

var _field2 = _interopRequireDefault(_field);

var _cellGroup = require('../../cell-group');

var _cellGroup2 = _interopRequireDefault(_cellGroup);

var _email = require('zan-utils/validate/email');

var _email2 = _interopRequireDefault(_email);

var _number = require('zan-utils/validate/number');

var _number2 = _interopRequireDefault(_number);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PLACEHOLDER_MAP = {
  'id_no': '输入18位身份证号码',
  text: '输入文本',
  tel: '输入数字',
  email: '输入邮箱',
  date: '点击选择日期',
  time: '点击选择时间'
};

exports.default = {
  render: function render() {
    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('van-cell-group', [_vm._l(_vm.internalMessages, function (message, index) {
      return [message.type === 'image' ? void 0 : message.multiple == '1' ? _c('van-field', { key: index, attrs: { "required": message.required == '1', "label": message.name, "placeholder": "点击填写段落文本", "type": "textarea" }, model: { value: _vm.messageValues[index], callback: function callback($$v) {
            _vm.$set(_vm.messageValues, index, $$v);
          }, expression: "messageValues[index]" } }) : _c('van-field', { key: index, attrs: { "required": message.required == '1', "label": message.name, "placeholder": _vm.PLACEHOLDER_MAP[message.type], "type": _vm.getType(message) }, model: { value: _vm.messageValues[index], callback: function callback($$v) {
            _vm.$set(_vm.messageValues, index, $$v);
          }, expression: "messageValues[index]" } })];
    })], 2);
  },

  name: 'van-sku-messages',

  components: (_components = {}, _components[_field2.default.name] = _field2.default, _components[_cellGroup2.default.name] = _cellGroup2.default, _components),

  props: {
    messages: Array
  },

  data: function data() {
    return {
      PLACEHOLDER_MAP: PLACEHOLDER_MAP
    };
  },


  // for debug
  // watch: {
  //   messageValues() {
  //     console.log(this.messageValues);
  //   }
  // },

  computed: {
    internalMessages: function internalMessages() {
      if (Object.prototype.toString.call(this.messages) === '[object Array]') {
        return this.messages;
      }
      return [];
    },
    messageValues: function messageValues() {
      var messageValues = [];
      this.internalMessages.forEach(function (message, index) {
        messageValues[index] = '';
      });

      return messageValues;
    }
  },

  methods: {
    getType: function getType(_ref) {
      var type = _ref.type,
          datetime = _ref.datetime;

      if (type === 'id_no') return 'text';
      return datetime > 0 ? 'datetime-local' : type;
    },
    getMessages: function getMessages() {
      var _this = this;

      var messages = {};

      this.messageValues.forEach(function (value, index) {
        if (_this.internalMessages[index].datetime > 0) {
          value = value.replace(/T/g, ' ');
        }
        messages['message_' + index] = value;
      });

      return messages;
    },
    getCartMessages: function getCartMessages() {
      var _this2 = this;

      var messages = {};

      this.messageValues.forEach(function (value, index) {
        var message = _this2.internalMessages[index];
        if (message.datetime > 0) {
          value = value.replace(/T/g, ' ');
        }
        messages[message.name] = value;
      });

      return messages;
    },
    validateMessages: function validateMessages() {
      var values = this.messageValues;

      for (var i = 0; i < values.length; i++) {
        var value = values[i];
        var message = this.internalMessages[i];

        if ((0, _isEmpty2.default)(value)) {
          // 必填字段的校验
          if (message.required == '1') {
            // eslint-disable-line
            if (message.type === 'image') {
              continue;
              // return `请上传${message.name}`;
            } else {
              return '\u8BF7\u586B\u5199' + message.name;
            }
          }
        } else {
          // if (message.type == 'image') {
          //   loaded = _this.$el.find('#ipt-' + j).data('uploaded');
          //   if (loaded == 'false' || !loaded) {
          //     return '图片还在上传中，请稍等。。';
          //   }
          // }
          if (message.type === 'tel' && !(0, _number2.default)(value)) {
            return '请填写正确的数字格式留言';
          }
          if (message.type === 'email' && !(0, _email2.default)(value)) {
            return '请填写正确的邮箱';
          }
          if (message.type === 'id_no' && (value.length < 15 || value.length > 18)) {
            return '请填写正确的身份证号码';
          }
        }

        if (value.length > 200) {
          return message.name + ' \u5199\u7684\u592A\u591A\u4E86<br/>\u4E0D\u8981\u8D85\u8FC7200\u5B57';
        }
      }
    }
  }

};