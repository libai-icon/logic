'use strict';

exports.__esModule = true;

var _popup = require('../mixins/popup');

var _popup2 = _interopRequireDefault(_popup);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  render: function render() {
    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('transition', { attrs: { "name": _vm.currentTransition } }, [_c('div', { directives: [{ name: "show", rawName: "v-show", value: _vm.currentValue, expression: "currentValue" }], staticClass: "van-popup", class: [_vm.position ? 'van-popup--' + _vm.position : ''] }, [_vm._t("default")], 2)]);
  },

  name: 'van-popup',

  mixins: [_popup2.default],

  props: {
    overlay: {
      default: true
    },

    lockOnScroll: {
      default: false
    },

    closeOnClickOverlay: {
      default: true
    },

    transition: {
      type: String,
      default: 'popup-slide'
    },

    position: {
      type: String,
      default: ''
    }
  },

  data: function data() {
    return {
      currentValue: false,
      currentTransition: this.transition
    };
  },


  watch: {
    currentValue: function currentValue(val) {
      this.$emit('input', val);
    },
    value: function value(val) {
      this.currentValue = val;
    }
  },

  beforeMount: function beforeMount() {
    if (this.transition !== 'popup-fade') {
      this.currentTransition = 'popup-slide-' + this.position;
    }
  },
  mounted: function mounted() {
    if (this.value) {
      this.currentValue = true;
      this.open();
    }
  }
};