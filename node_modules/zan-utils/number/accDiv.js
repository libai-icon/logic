(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['module', 'exports'], factory);
  } else if (typeof exports !== "undefined") {
    factory(module, exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod, mod.exports);
    global.accDiv = mod.exports;
  }
})(this, function (module, exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  /**
   * 除法函数，用来得到精确的除法结果
   * @memberof module:number
   * @param {number} arg1 参数1
   * @param {number} arg2 参数2
   * @returns {number}
   * @runkit true
   * @example
   * const accDiv = require('zan-utils/number/accDiv');
   * accDiv(0.3, 0.1);
   * //3
   */
  function accDiv(arg1, arg2) {
    var t1 = 0;
    var t2 = 0;
    var r1 = void 0;
    var r2 = void 0;
    try {
      t1 = arg1.toString().split('.')[1].length;
    } catch (e) {}
    try {
      t2 = arg2.toString().split('.')[1].length;
    } catch (e) {}
    r1 = Number(arg1.toString().replace('.', ''));
    r2 = Number(arg2.toString().replace('.', ''));
    return r1 / r2 * Math.pow(10, t2 - t1);
  }
  exports['default'] = accDiv;
  module.exports = exports['default'];
});